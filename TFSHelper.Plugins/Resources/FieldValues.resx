<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Reason_Accepted" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="Reason_AdditionalWorkFound" xml:space="preserve">
    <value>Additional work found</value>
  </data>
  <data name="Reason_Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="Reason_Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="Reason_ClosedinError" xml:space="preserve">
    <value>Closed in Error</value>
  </data>
  <data name="Reason_Complete_RequiresTest" xml:space="preserve">
    <value>Complete &amp; Requires Test</value>
  </data>
  <data name="Reason_DevComplete" xml:space="preserve">
    <value>Dev Complete</value>
  </data>
  <data name="Reason_DevComplete_Review" xml:space="preserve">
    <value>Dev Complete/Review</value>
  </data>
  <data name="Reason_DoesNotRequireTest" xml:space="preserve">
    <value>Does Not Require Test</value>
  </data>
  <data name="Reason_Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="Reason_Fixed" xml:space="preserve">
    <value>Fixed</value>
  </data>
  <data name="Reason_InvestigationComplete" xml:space="preserve">
    <value>Investigation Complete</value>
  </data>
  <data name="Reason_IsNotRejected" xml:space="preserve">
    <value>Is Not Rejected</value>
  </data>
  <data name="Reason_New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Reason_NewTask" xml:space="preserve">
    <value>New task</value>
  </data>
  <data name="Reason_Notfixed" xml:space="preserve">
    <value>Not fixed</value>
  </data>
  <data name="Reason_Reactivated" xml:space="preserve">
    <value>Reactivated</value>
  </data>
  <data name="Reason_ReconsideringtheTask" xml:space="preserve">
    <value>Reconsidering the Task</value>
  </data>
  <data name="Reason_Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="Reason_Removedfromthebacklog" xml:space="preserve">
    <value>Removed from the backlog</value>
  </data>
  <data name="Reason_Review_TestFailed" xml:space="preserve">
    <value>Review/Test Failed</value>
  </data>
  <data name="Reason_Review_TestPassed" xml:space="preserve">
    <value>Review/Test Passed</value>
  </data>
  <data name="Reason_TestFailed" xml:space="preserve">
    <value>Test Failed</value>
  </data>
  <data name="Reason_TheTaskIsBlocked" xml:space="preserve">
    <value>The Task Is Blocked</value>
  </data>
  <data name="Reason_TheTAskIsUnblocked" xml:space="preserve">
    <value>The TAsk Is Unblocked</value>
  </data>
  <data name="Reason_Verified" xml:space="preserve">
    <value>Verified</value>
  </data>
  <data name="Reason_WithoutChangeList" xml:space="preserve">
    <value>Without Changelist</value>
  </data>
  <data name="Reason_WorkFinished" xml:space="preserve">
    <value>Work finished</value>
  </data>
  <data name="Reason_WorkStarted" xml:space="preserve">
    <value>Work started</value>
  </data>
  <data name="Reason_WorkStopped" xml:space="preserve">
    <value>Work stopped</value>
  </data>
  <data name="Severity_Blocker" xml:space="preserve">
    <value>Blocker</value>
  </data>
  <data name="Severity_Critical" xml:space="preserve">
    <value>Critical</value>
  </data>
  <data name="State_Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="State_Blocked" xml:space="preserve">
    <value>Blocked</value>
  </data>
  <data name="State_Closed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="State_Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="State_InProgress" xml:space="preserve">
    <value>In Progress</value>
  </data>
  <data name="State_Proposed" xml:space="preserve">
    <value>Proposed</value>
  </data>
  <data name="State_Removed" xml:space="preserve">
    <value>Removed</value>
  </data>
  <data name="State_Resolved" xml:space="preserve">
    <value>Resolved</value>
  </data>
  <data name="State_Tested" xml:space="preserve">
    <value>Tested</value>
  </data>
  <data name="State_ToDo" xml:space="preserve">
    <value>To Do</value>
  </data>
  <data name="Triage_DevPlanned" xml:space="preserve">
    <value>برنامه ریزی شده نگهداری</value>
  </data>
  <data name="Triage_NotPlanned" xml:space="preserve">
    <value>برنامه ریزی نشده</value>
  </data>
  <data name="Triage_Planned" xml:space="preserve">
    <value>برنامه ریزی شده</value>
  </data>
  <data name="Triage_TestPlanned" xml:space="preserve">
    <value>برنامه ریزی شده تست</value>
  </data>
  <data name="WI_AnalysisTask" xml:space="preserve">
    <value>Analysis Task</value>
  </data>
  <data name="WI_Bug" xml:space="preserve">
    <value>Bug</value>
  </data>
  <data name="WI_DevTask" xml:space="preserve">
    <value>Dev Task</value>
  </data>
  <data name="WI_Link_Related" xml:space="preserve">
    <value>RelatedLink</value>
  </data>
  <data name="WI_Requirement" xml:space="preserve">
    <value>Requirement</value>
  </data>
  <data name="WI_TestTask" xml:space="preserve">
    <value>Test Task</value>
  </data>
  <data name="ChangeType_Applications" xml:space="preserve">
    <value>نرم افزاری</value>
  </data>
  <data name="ChangeType_Hardware" xml:space="preserve">
    <value>سخت افزاری</value>
  </data>
  <data name="ChangeType_Change_Model" xml:space="preserve">
    <value>تغییر Model</value>
  </data>
  <data name="ChangeType_Code_Review" xml:space="preserve">
    <value>Code Review</value>
  </data>
  <data name="ChangeType_Configuration" xml:space="preserve">
    <value>پیکر بندی</value>
  </data>
  <data name="ChangeType_Infrastructure" xml:space="preserve">
    <value>زیر ساختی</value>
  </data>
  <data name="WI_ProductBacklogItem" xml:space="preserve">
    <value>Product Backlog Item</value>
  </data>
  <data name="WI_Feature" xml:space="preserve">
    <value>Feature</value>
  </data>
  <data name="WI_Task" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="Reason_WorkisCanceled" xml:space="preserve">
    <value>Work is Canceled</value>
  </data>
  <data name="Reason_Rejectedfromtest" xml:space="preserve">
    <value>Rejected from test</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Reconsidering the Task</value>
  </data>
</root>